<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hillert.metadata</groupId>
	<artifactId>image-metadata-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Image Metadata - Parent</name>

	<description>
		Image Metadata projects show-cases various demos for handling image metadata using Java.
	</description>

	<url>https://github.com/ghillert/image-metadata</url>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/ghillert/image-metadata/issues</url>
	</issueManagement>

	<organization>
		<name>Hillert Inc.</name>
		<url>https://www.hillert.com/</url>
	</organization>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Gunnar Hillert</name>
			<organization>Hillert, Inc.</organization>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/ghillert/image-metadata.git</connection>
		<developerConnection>scm:git:https://github.com/ghillert/image-metadata.git</developerConnection>
		<url>https://github.com/ghillert/image-metadata</url>
		<tag>HEAD</tag>
	</scm>

	<modules>
		<module>image-metadata-commons-imaging</module>
	</modules>

	<properties>
		<image-metadata.root>${basedir}</image-metadata.root>

		<java.version>17</java.version>
		<resource.delimiter>@</resource.delimiter>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.minimum.version>3.8.6</maven.minimum.version>
		<sonar.moduleKey>${project.artifactId}</sonar.moduleKey>

		<!-- plugin dependency versions -->

		<dependency-check-maven.version>7.1.1</dependency-check-maven.version>
		<checkstyle.version>10.6.0</checkstyle.version>
		<maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
		<maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
		<native-maven-plugin.version>0.10.2</native-maven-plugin.version>
		<spring-javaformat-checkstyle.version>0.0.39</spring-javaformat-checkstyle.version>
		<versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>

		<!-- main dependency versions -->
		<apache-commons-imaging.version>1.0-alpha3</apache-commons-imaging.version>
		<apache-xmlgraphics-commons.version>2.9</apache-xmlgraphics-commons.version>
		<imagej.version>1.54d</imagej.version>
		<spring-boot.version>3.1.5</spring-boot.version>
		<xerces.version>2.12.2</xerces.version>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>snapshots-repo</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>local-lib</id>
			<url>file://${project.basedir}/lib</url>
		</repository>
	</repositories>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
						<dependency>
							<groupId>io.spring.javaformat</groupId>
							<artifactId>spring-javaformat-checkstyle</artifactId>
							<version>${spring-javaformat-checkstyle.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>checkstyle-validation</id>
							<phase>validate</phase>
							<inherited>true</inherited>
							<configuration>
								<configLocation>${image-metadata.root}/src/checkstyle/checkstyle.xml</configLocation>
								<includeTestSourceDirectory>true</includeTestSourceDirectory>
							</configuration>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.graalvm.buildtools</groupId>
					<artifactId>native-maven-plugin</artifactId>
					<version>${native-maven-plugin.version}</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<id>repackage</id>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<compilerArgument>-Xlint:all,-processing</compilerArgument>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-plugin-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>${maven.minimum.version}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<property>
					<name>nativeCompile</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-maven-plugin</artifactId>
							<configuration>
								<image>
									<builder>paketobuildpacks/builder:full</builder>
									<env>
										<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
										<BP_NATIVE_IMAGE_BUILD_ARGUMENTS>--initialize-at-build-time=com.sun.beans.introspect.ClassInfo,java.beans.Introspector,com.sun.beans.finder.MethodFinder</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
									</env>
								</image>
							</configuration>
							<executions>
								<execution>
									<id>process-aot</id>
									<goals>
										<goal>process-aot</goal>
									</goals>
								</execution>
<!--								<execution>-->
<!--									<id>build-image-no-fork</id>-->
<!--									<goals>-->
<!--										<goal>build-image-no-fork</goal>-->
<!--									</goals>-->
<!--									<phase>package</phase>-->
<!--									<configuration>-->
<!--										<skip>false</skip>-->
<!--									</configuration>-->
<!--								</execution>-->
							</executions>
						</plugin>
						<plugin>
							<groupId>org.graalvm.buildtools</groupId>
							<artifactId>native-maven-plugin</artifactId>
							<configuration>
								<classesDirectory>${project.build.outputDirectory}</classesDirectory>
								<metadataRepository>
									<enabled>true</enabled>
								</metadataRepository>
								<requiredVersion>22.3</requiredVersion>
								<buildArgs>
									<arg>--initialize-at-build-time=org.slf4j.LoggerFactory,ch.qos.logback</arg>
									<arg>--trace-class-initialization=java.beans.Introspector,com.sun.beans.introspect.ClassInfo,com.sun.beans.finder.MethodFinder</arg>
									<arg>--initialize-at-build-time=com.sun.beans.introspect.ClassInfo,java.beans.Introspector,com.sun.beans.finder.MethodFinder</arg>
								</buildArgs>
							</configuration>
							<executions>
								<execution>
									<id>add-reachability-metadata</id>
									<goals>
										<goal>add-reachability-metadata</goal>
									</goals>
								</execution>
								<execution>
									<id>build-native</id>
									<goals>
										<goal>compile-no-fork</goal>
									</goals>
									<phase>${native-maven-build-phase}</phase>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>nativeCompile</id>
			<activation>
				<property>
					<name>nativeCompile</name>
				</property>
			</activation>
			<properties>
				<native-maven-build-phase>package</native-maven-build-phase>
			</properties>
		</profile>
		<profile>
			<id>versions</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>${versions-maven-plugin.version}</version>
						<configuration>
							<rulesUri>file://${image-metadata.root}/src/rules.xml</rulesUri>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>display-property-updates</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
